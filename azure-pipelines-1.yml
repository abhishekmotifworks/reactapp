# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  - name: System.Debug
    value: true

steps:
- task: Docker@2
  displayName: buildAndPush
  inputs:
    containerRegistry: testcicd
    repository: testcicdrepo
    buildContext: '$(System.DefaultWorkingDirectory)'
    tags: |
     $(Build.BuildId)
     latest
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)/s'
    artifact: 'manifest'
    publishLocation: 'pipeline'
    
- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'current'
    artifactName: 'manifest'
    targetPath: '$(Pipeline.Workspace)/manifest'

# - task: KubernetesManifest@1
#   inputs:
#     action: 'createSecret'
#     connectionType: 'kubernetesServiceConnection'
#     kubernetesServiceConnection: 'aks-service-conn'
#     namespace: 'default'
#     secretType: 'dockerRegistry'
#     secretName: 'mysecret'
#     dockerRegistryEndpoint: 'testcicd'
   
# For normal deployment without helm ## 
# - task: KubernetesManifest@1
#   inputs:
#     action: 'deploy'
#     connectionType: 'kubernetesServiceConnection'
#     kubernetesServiceConnection: 'aks-service-conn'
#     namespace: 'default'
#     manifests: '$(Pipeline.Workspace)/manifest/deploy.yaml'
#     containers: 'SampleApp01.azurecr.io/testcicdrepo:$(Build.BuildId)'

- task: HelmInstaller@0
  inputs:
    helmVersion: '2.14.1'
    installKubectl: true

- task: HelmDeploy@0
  inputs:
    command: 'package'
    chartPath: 'mycharts'
    chartVersion: '$(Build.BuildId)'

- task: HelmDeploy@0
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscription: 'M0086 (75078e35-6d4e-436c-af4a-56b7b23022c6)'
    azureResourceGroup: 'reactapp'
    kubernetesCluster: 'aks-reactapp'
    namespace: 'my-namespace'
    command: 'upgrade'
    chartType: 'FilePath'
    chartPath: '$(Build.ArtifactStagingDirectory)/mycharts-$(Build.BuildId).tgz'
    chartVersion: '$(Build.BuildId)'
    releaseName: 'first'
  

# - task: HelmDeploy@0
#   inputs:
#     connectionType: 'Kubernetes Service Connection'
#     kubernetesServiceConnection: 'aks-service-conn'
#     namespace: 'default'
#     command: 'upgrade'
#     chartType: 'FilePath'
#     chartPath: '$(Build.ArtifactStagingDirectory)/mycharts-$(Build.BuildId).tgz'

